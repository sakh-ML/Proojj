$date
  Wed Nov  6 16:29:47 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module demux14_tb $end
$var reg 3 ! i_n[2:0] $end
$var reg 2 " sel[1:0] $end
$var reg 3 # y0[2:0] $end
$var reg 3 $ y1[2:0] $end
$var reg 3 % y2[2:0] $end
$var reg 3 & y3[2:0] $end
$scope module demultiplix $end
$var reg 3 ' i_n[2:0] $end
$var reg 2 ( sel[1:0] $end
$var reg 3 ) y0[2:0] $end
$var reg 3 * y1[2:0] $end
$var reg 3 + y2[2:0] $end
$var reg 3 , y3[2:0] $end
$var reg 1 - sel_not0 $end
$var reg 1 . sel_not1 $end
$scope module demu_and_assignment(0) $end
$scope module and_output01 $end
$var reg 1 / input1 $end
$var reg 1 0 input2 $end
$var reg 1 1 input3 $end
$var reg 1 2 and_output $end
$var reg 1 3 andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 4 input1 $end
$var reg 1 5 input2 $end
$var reg 1 6 input3 $end
$var reg 1 7 and_output $end
$var reg 1 8 andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 9 input1 $end
$var reg 1 : input2 $end
$var reg 1 ; input3 $end
$var reg 1 < and_output $end
$var reg 1 = andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 > input1 $end
$var reg 1 ? input2 $end
$var reg 1 @ input3 $end
$var reg 1 A and_output $end
$var reg 1 B andgate $end
$upscope $end
$upscope $end
$scope module demu_and_assignment(1) $end
$scope module and_output01 $end
$var reg 1 C input1 $end
$var reg 1 D input2 $end
$var reg 1 E input3 $end
$var reg 1 F and_output $end
$var reg 1 G andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 H input1 $end
$var reg 1 I input2 $end
$var reg 1 J input3 $end
$var reg 1 K and_output $end
$var reg 1 L andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 M input1 $end
$var reg 1 N input2 $end
$var reg 1 O input3 $end
$var reg 1 P and_output $end
$var reg 1 Q andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 R input1 $end
$var reg 1 S input2 $end
$var reg 1 T input3 $end
$var reg 1 U and_output $end
$var reg 1 V andgate $end
$upscope $end
$upscope $end
$scope module demu_and_assignment(2) $end
$scope module and_output01 $end
$var reg 1 W input1 $end
$var reg 1 X input2 $end
$var reg 1 Y input3 $end
$var reg 1 Z and_output $end
$var reg 1 [ andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 \ input1 $end
$var reg 1 ] input2 $end
$var reg 1 ^ input3 $end
$var reg 1 _ and_output $end
$var reg 1 ` andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 a input1 $end
$var reg 1 b input2 $end
$var reg 1 c input3 $end
$var reg 1 d and_output $end
$var reg 1 e andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 f input1 $end
$var reg 1 g input2 $end
$var reg 1 h input3 $end
$var reg 1 i and_output $end
$var reg 1 j andgate $end
$upscope $end
$upscope $end
$scope module not_sel5 $end
$var reg 1 k input1 $end
$var reg 1 l not_output $end
$var reg 1 m notgate $end
$upscope $end
$scope module not_sel6 $end
$var reg 1 n input1 $end
$var reg 1 o not_output $end
$var reg 1 p notgate $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b100 !
b00 "
b100 #
b000 $
b000 %
b000 &
b100 '
b00 (
b100 )
b000 *
b000 +
b000 ,
1-
1.
1/
10
01
02
03
14
05
06
07
08
09
1:
0;
0<
0=
0>
0?
0@
0A
0B
1C
1D
0E
0F
0G
1H
0I
0J
0K
0L
0M
1N
0O
0P
0Q
0R
0S
0T
0U
0V
1W
1X
1Y
1Z
1[
1\
0]
1^
0_
0`
0a
1b
1c
0d
0e
0f
0g
1h
0i
0j
0k
1l
1m
0n
1o
1p
#10000000
b01 "
b000 #
b100 $
b01 (
b000 )
b100 *
0-
0/
04
19
1>
0C
0H
1M
1R
0W
0Z
0[
0\
1a
1d
1e
1f
1k
0l
0m
#20000000
b10 "
b000 $
b100 %
b10 (
b000 *
b100 +
1-
0.
1/
00
14
15
09
0:
0>
1?
1C
0D
1H
1I
0M
0N
0R
1S
1W
0X
1\
1]
1_
1`
0a
0b
0d
0e
0f
1g
0k
1l
1m
1n
0o
0p
#30000000
b11 "
b000 %
b100 &
b11 (
b000 +
b100 ,
0-
0/
04
19
1>
0C
0H
1M
1R
0W
0\
0_
0`
1a
1f
1i
1j
1k
0l
0m
#40000000
b10 "
b100 %
b000 &
b10 (
b100 +
b000 ,
1-
1/
14
09
0>
1C
1H
0M
0R
1W
1\
1_
1`
0a
0f
0i
0j
0k
1l
1m
#50000000
b11 "
b000 %
b100 &
b11 (
b000 +
b100 ,
0-
0/
04
19
1>
0C
0H
1M
1R
0W
0\
0_
0`
1a
1f
1i
1j
1k
0l
0m
#60000000
